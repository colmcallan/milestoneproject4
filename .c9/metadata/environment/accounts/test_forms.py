{"filter":false,"title":"test_forms.py","tooltip":"/accounts/test_forms.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":66,"column":81},"action":"insert","lines":["from django.test import TestCase","from django.contrib.auth.models import User","from .forms import UserLoginForm, UserRegistrationForm","","","def setUp(self):","    \"\"\"Create a user if needed\"\"\"","    user = User.objects.create(username='test')","    user.set_password('test_password')","    user.save()","","","class TestAccountsLoginForm(TestCase):","    \"\"\"","    Set of test to ensure our accounts forms are working ","    as expected","    \"\"\"","    def test_login_form_valid_data(self):","        user = {'username': 'test', 'password': 'test_password'}","        form = UserLoginForm(data=user)","        self.assertTrue(form.is_valid)","","","    def test_login_form_invalid_data(self):","        form = UserLoginForm(data={'username':'','password':''})","        self.assertEqual(form.errors, {'username': ['This field is required.'],","                                       'password': ['This field is required.']})","","","class TestAccountsRegistrationForm(TestCase):","    \"\"\"","    Set of tests to ensure our accounts forms are working ","    as expected","    \"\"\"","    def test_successfull_register(self):","        form = UserRegistrationForm({'username':\"test\",","                                     \"password1\": \"test_password\",","                                     \"password2\": \"test_password\",","                                     \"email\": \"test@test.com\"})","        self.assertTrue(form.is_valid())","","","    def test_register_with_already_created_username(self):","        setUp(self)","        form = UserRegistrationForm({'username':\"test\",","                                     \"password1\": \"test_password\",","                                     \"password2\": \"test_password\",","                                     \"email\": \"test@test.com\"})","        self.assertFalse(form.is_valid())","        self.assertEqual(form.errors['username'],","                                    ['A user with that username already exists.'])","","","    def test_passwords_match(self):","        form = UserRegistrationForm({'username': 'test',","                                     'password1': 'test_password1',","                                     'password2': 'test_password2'})","        self.assertFalse(form.is_valid())","        self.assertEqual(form.errors, {'password2': ['Passwords must match!']})","","","    def test_required_fields(self):","        form = UserRegistrationForm({})","        self.assertFalse(form.is_valid())","        self.assertEqual(form.errors, {'username': ['This field is required.'],","                                       'password1': ['This field is required.'],","                                       'password2': ['This field is required.']})"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":66,"column":81},"end":{"row":66,"column":81},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1567036506514,"hash":"21029725fb84d3139fc2d56f8f20cbb2a9a354b3"}